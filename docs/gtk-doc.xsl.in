<?xml version='1.0'?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:l="http://docbook.sourceforge.net/xmlns/l10n/1.0"
                exclude-result-prefixes="l"
                version="1.0">

  <xsl:include href="@GTKDOC_XSL@"/>

  <xsl:param name="custom.css.source">gtu.css.xml</xsl:param>

  <xsl:template match="sectpurpose">
    <xsl:if test="node()">
      <xsl:text> </xsl:text>
      <xsl:call-template name="dingbat">
        <xsl:with-param name="dingbat">em-dash</xsl:with-param>
      </xsl:call-template>
      <xsl:text> </xsl:text>
      <xsl:apply-templates/>
    </xsl:if>
  </xsl:template>

  <!-- This handles repurpose in TOC line to turn off any nested links -->
  <xsl:template match="sectpurpose" mode="no.anchor.mode">
    <xsl:if test="node()">
      <xsl:text> </xsl:text>
      <xsl:call-template name="dingbat">
        <xsl:with-param name="dingbat">em-dash</xsl:with-param>
      </xsl:call-template>
      <xsl:text> </xsl:text>
      <xsl:apply-templates mode="no.anchor.mode"/>
    </xsl:if>
  </xsl:template>

  <xsl:template name="toc.line">
    <xsl:param name="toc-context" select="."/>
    <xsl:param name="depth" select="1"/>
    <xsl:param name="depth.from.context" select="8"/>

    <span>
      <xsl:attribute name="class"><xsl:value-of select="local-name(.)"/></xsl:attribute>

      <!-- * if $autotoc.label.in.hyperlink is zero, then output the label -->
      <!-- * before the hyperlinked title (as the DSSSL stylesheet does) -->
      <xsl:if test="$autotoc.label.in.hyperlink = 0">
        <xsl:variable name="label">
          <xsl:apply-templates select="." mode="label.markup"/>
        </xsl:variable>
        <xsl:copy-of select="$label"/>
        <xsl:if test="$label != ''">
          <xsl:value-of select="$autotoc.label.separator"/>
        </xsl:if>
      </xsl:if>

      <a>
        <xsl:attribute name="href">
          <xsl:call-template name="href.target">
            <xsl:with-param name="context" select="$toc-context"/>
            <xsl:with-param name="toc-context" select="$toc-context"/>
          </xsl:call-template>
        </xsl:attribute>

        <!-- * if $autotoc.label.in.hyperlink is non-zero, then output the label -->
        <!-- * as part of the hyperlinked title -->
        <xsl:if test="not($autotoc.label.in.hyperlink = 0)">
          <xsl:variable name="label">
            <xsl:apply-templates select="." mode="label.markup"/>
          </xsl:variable>
          <xsl:copy-of select="$label"/>
          <xsl:if test="$label != ''">
            <xsl:value-of select="$autotoc.label.separator"/>
          </xsl:if>
        </xsl:if>

        <xsl:apply-templates select="." mode="titleabbrev.markup"/>
      </a>
    </span>

    <xsl:if test="local-name(.) = 'section'">
      <xsl:apply-templates select="." mode="toc.line"/>
    </xsl:if>
  </xsl:template>

  <xsl:template match="*" mode="toc.line">
  </xsl:template>

  <xsl:template match="section[sectioninfo/sectpurpose]" mode="toc.line">
    <span class="sectpurpose">
      <xsl:if test="$annotate.toc != 0">
        <xsl:apply-templates select="sectioninfo/sectpurpose" mode="no.anchor.mode"/>
      </xsl:if>
    </span>
  </xsl:template>

  <xsl:template name="section.toc.separator">
    <hr/>
  </xsl:template>

</xsl:stylesheet>
